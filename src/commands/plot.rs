pub mod cohort;
pub mod sample;

use clap::Command;

use crate::lib::qc::results::Results;

use self::sample::quality_score_distribution::QualityScoreDistributionPlot;

//===============//
// Command setup //
//===============//

pub fn get_command<'a>() -> Command<'a> {
    Command::new("plot")
        .about("Produces plots for data generated by `ngs qc`.")
        .subcommand_required(true)
        .subcommand(cohort::get_command())
        .subcommand(sample::get_command())
}

//===========//
// Plot kind //
//===========//

pub enum PlotKind {
    Sample,
    Cohort,
}

//============//
// Plot trait //
//============//

pub trait Plot {
    fn name(&self) -> &'static str;
    fn kind(&self) -> PlotKind;
    fn filename(&self) -> &'static str;
    fn generate(&self, data: &Results) -> anyhow::Result<plotly::Plot>;
}

//=========================//
// Get all supported plots //
//=========================//

pub fn get_all_plots() -> Vec<Box<dyn Plot>> {
    vec![Box::new(QualityScoreDistributionPlot)]
}
